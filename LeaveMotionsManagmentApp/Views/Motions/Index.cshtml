@model ListMotions

@{

    ViewData["Title"] = "Motions";
    ViewData["Name"] = Model.Query.Name;
    ViewData["Send"] = Model.Query.Send != DateTime.MinValue ? "" : Model.Query.Send.ToString("yyyy-MM-dd");
    ViewData["RequestedStartingDate"] = Model.Query.RequestedStartingDate != DateTime.MinValue ? Model.Query.RequestedStartingDate.ToString("yyyy-MM-dd") : "";
    ViewData["RequestedDueDate"] = Model.Query.RequestedDueDate != DateTime.MinValue ? Model.Query.RequestedDueDate.ToString("yyyy-MM-dd") : "";
    ViewData["Send"] = Model.Query.Send != DateTime.MinValue ? Model.Query.Send.ToString("yyyy-MM-dd") : "";
    ViewData["DisplayResults"] = Model.Query.DisplayResults;
    ViewData["State"] = Model.Query.State;

    var parameters = new Dictionary<string, string?>
{

                { "Name", Model.Query.Name is null ? " " : Model.Query.Name.ToString() },
                { "DisplayResults", Model.Query.DisplayResults.ToString() },
                { "Page", Model.Query.Page.ToString() },
                { "PageCount", Model.Query.PageCount.ToString() },
                {"RequestedStartingDate",  Model.Query.RequestedStartingDate != DateTime.MinValue ? Model.Query.RequestedStartingDate.ToString("yyyy-MM-dd") : null},
                {"RequestedDueDate",  Model.Query.RequestedDueDate != DateTime.MinValue ? Model.Query.RequestedDueDate.ToString("yyyy-MM-dd") : null },
                {"Send",  Model.Query.Send != DateTime.MinValue ? Model.Query.Send.ToString("yyyy-MM-dd") : null },
                {"State", Model.Query.State },
               };

    var selected = new List<string>
    {
        "All",
        "Accepted",
        "Denied",
        "Pending"

    };

    if (Model.Query.State == null)
        Model.Query.State = "";
}




<h1>Motions</h1>
<br />
<form class="form-horizontal" asp-action="Query" method="get">
    <p>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Name</label>
                    <input type="search" class="form-control" name="name" placeholder="Name of the motion" value="@ViewData["Name"]" />

                </div>
                <div class="form-group">
                    <label>State</label>

                    <select class="form-control" name="state" value="@ViewData["State"]">
                        @if (Model.Query.State == "")
                        {
                            <option selected value="">All</option>
                        }
                        else
                        {
                            <option value="">All</option>   
                        }
                        @if (Model.Query.State.ToLower() == "accepted")
                        {
                            <option selected value="Accepted">Accepted</option>
                        }
                        else
                        {
                            <option value="Accepted">Accepted</option>
                        }
                        @if (Model.Query.State.ToLower() == "denied")
                        {
                            <option selected value="Denied">Denied</option>
                        }
                        else
                        {
                            <option value="Denied">Denied</option>
                        }
                        @if (Model.Query.State.ToLower() == "pending")
                        {
                            <option selected value="">Pending</option>
                        }
                        else
                        {
                            <option value="Pending">Pending</option>
                        }

                        @if (User.IsInRole("Supervisor"))
                        {
                            @if (Model.Query.State.ToLower() == "cancelled")
                            {
                                <option selected value="Cancelled">Cancelled</option>
                            }
                            else
                            {
                            <option value="Cancelled">Cancelled</option>
                            }
                            
                        }
                    </select>

                </div>
                <div class="form-group">
                    <label>Display</label>

                    <input class="form-control" type="number" name="displayResults" value="@ViewData["DisplayResults"]" />
                </div>

            </div>
            <div class="col-md-6">
                <div class="form-group">

                    <label>Requested Starting</label>

                    <input class="form-control" type="date" data-date-format="DD MMMM YYYY" name="requestedStartingDate" value="@ViewData["RequestedStartingDate"]" />
                </div>
                <div class="form-group">
                    <label>Requested Due</label>


                    <input class="form-control" type="date" data-date-format="DD MMMM YYYY" name="requestedDueDate" value="@ViewData["RequestedDueDate"]" />
                </div>
                <div class="form-group">
                    <label>Send</label>
                    <input class="form-control" type="date" data-date-format="DD MMMM YYYY" value="@ViewData["Send"]" name="Send" />

                </div>
            </div>


        </div>



        <div class="btn-group">
            <input class="btn btn-primary mt-2" type="submit" value="Filter" /> &nbsp;
            <a asp-action="Index" class="btn btn-warning mt-2">Reset</a>
        </div>





    </p>
</form>
<br />
<p>
    @if (User.IsInRole("Employee"))
    {
        <a asp-action="Create" class="btn btn-success">Create New</a>
    }

</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Send
            </th>
            <th>
                Requested Starting Date
            </th>
            <th>
                Requested Due Date
            </th>

            <th>
                Motion State
            </th>
            @if (User.IsInRole("Supervisor"))
            {
                <th>
                    Applicant
                </th>
            }

            <th>
                Examinator
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Motions)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Send)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RequestedStartingDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RequestedDueDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MotionState)
                </td>

                @if (User.IsInRole("Supervisor"))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Employee.UserName)

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Supervisor.UserName)

                    </td>
                }
                else
                {

                    <td>
                        @Html.DisplayFor(modelItem => item.Supervisor.UserName)

                    </td>
                }

                <td>
                    @if (User.IsInRole("Employee"))
                    {
                        <div class="btn-group">
                            <a asp-action="Cancel" asp-route-id="@item.Id" class="btn btn-danger">Cancel</a>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-info">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-secondary">Details</a>
                        </div>
                    }
                    @if (User.IsInRole("Supervisor"))
                    {
                        <div class="btn-group">
                            <a asp-action="Accept" asp-route-id="@item.Id" class="btn btn-success">Accept</a>
                            <a asp-action="Deny" asp-route-id="@item.Id" class="btn btn-warning ">Deny</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-secondary">Details</a>

                        </div>

                    }






                </td>
            </tr>
        }

    </tbody>
</table>

@if (Model.Query.PageCount > 1)
{
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @for (int i = 1; i <= Model.Query.PageCount; i++)
            {
                var parametersForPagination = parameters;
                parametersForPagination["Page"] = i.ToString();
                @if (i == Model.Query.Page)
                {
                    <li class="page-item active"><a class="page-link" asp-action="Query" asp-all-route-data="parametersForPagination">@i</a></li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" asp-action="Query" asp-all-route-data="parametersForPagination">@i</a></li>
                }

            }
        </ul>
    </nav>
}

