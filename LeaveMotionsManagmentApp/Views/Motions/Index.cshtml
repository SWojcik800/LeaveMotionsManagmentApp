@model ListMotions

@{

    ViewData["Title"] = "Index";
    ViewData["Name"] = Model.Query.Name;
    ViewData["Send"] = Model.Query.Send != DateTime.MinValue ? Model.Query.Send.ToString("yyyy-MM-dd") : "";
    ViewData["RequestedStartingDate"] = Model.Query.Send != DateTime.MinValue ? Model.Query.RequestedStartingDate.ToString("yyyy-MM-dd") : "";
    ViewData["RequestedDueDate"] = Model.Query.Send != DateTime.MinValue ? Model.Query.RequestedDueDate.ToString("yyyy-MM-dd") : "";
    ViewData["DisplayResults"] = Model.Query.DisplayResults;

    var parameters = new Dictionary<string, string?>
    {

                { "Name", Model.Query.Name is null ? " " : Model.Query.Name.ToString() },
                { "DisplayResults", Model.Query.DisplayResults.ToString() },
                { "Page", Model.Query.Page.ToString() },
                { "PageCount", Model.Query.PageCount.ToString() },
    }; ;

}


<h1>Motions</h1>
<br />
<form asp-action="Query" method="get">
    <p>

        <input type="text" name="name" placeholder="Name of the motion/user" value="@ViewData["Name"]" />
        &nbsp;

        <select name="state">
            <option value="">All</option>
            <option value="Accepted">Accepted</option>
            <option value="Denied">Denied</option>
            <option value="Pending">Pending</option>
            @if (User.IsInRole("Supervisor"))
            {
                <option value="Cancelled">Cancelled</option>
            }
        </select>
        <div class="form-group">
            <label>Send</label>
            <br />
            <input type="date" data-date-format="DD MMMM YYYY" name="Send" />
            <br />

            <label>Requested Starting</label>
            <br />

            <input type="date" data-date-format="DD MMMM YYYY" name="requestedStartingDate" />
            <br />
            <label>Requested Due</label>
            <br />

            <input type="date" data-date-format="DD MMMM YYYY" name="requestedDueDate" />
            <br />
            <label>Display</label>
            <br />
            <input type="number" name="displayResults" value="@ViewData["DisplayResults"]" />

        </div>

        <input class="btn btn-primary mt-2" type="submit" value="Filter" />
    
    </p>
</form>
<br />
<p>
    @if (User.IsInRole("Employee"))
    {
        <a asp-action="Create" class="btn btn-success">Create New</a>
    }

</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Send
            </th>
            <th>
                Requested Starting Date
            </th>
            <th>
                Requested Due Date
            </th>

            <th>
                Motion State
            </th>
            @if (User.IsInRole("Supervisor"))
            {
                <th>
                    Applicant
                </th>
            }

            <th>
                Supervisor
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Motions)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Send)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RequestedStartingDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RequestedDueDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MotionState)
                </td>

                @if (User.IsInRole("Supervisor"))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Employee.UserName)

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Supervisor.UserName)

                    </td>
                }
                <td>
                    @if (User.IsInRole("Employee"))
                    {
                        <a asp-action="Cancel" asp-route-id="@item.Id" class="btn btn-danger">Cancel</a>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-info">Edit</a>
                    }
                    @if (User.IsInRole("Supervisor"))
                    {
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger mt-2">Delete</a>
                        <a asp-action="Accept" asp-route-id="@item.Id" class="btn btn-success mt-2">Accept</a>
                        <a asp-action="Deny" asp-route-id="@item.Id" class="btn btn-warning mt-2">Deny</a>
                    }

                    @if (User.IsInRole("Employee"))
                    {
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-secondary">Details</a>
                    }
                    else
                    {
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-secondary mt-2">Details</a>
                    }



                </td>
            </tr>
        }

    </tbody>
</table>

@if (Model.Query.PageCount > 1)
{
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @for (int i = 1; i <= Model.Query.PageCount; i++)
            {
                var parametersForPagination = parameters;
                parametersForPagination["Page"] = i.ToString();

                <li class="page-item"><a class="page-link" asp-all-route-data="parametersForPagination">@i</a></li>
            }
        </ul>
    </nav>
}

